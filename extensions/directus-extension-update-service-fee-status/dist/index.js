"use strict";function t(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}var e=t((async function({schedule:t},{services:e,getSchema:a}){const{ItemsService:r}=e;t("59 16 * * *",(async()=>{try{const t=new r("clouds",{schema:await a()}),e=new Date,s=new Date;s.setMonth(e.getMonth()+2);const n=(await t.readByQuery({fields:["*"],filter:{_and:[{start_date:{_lte:e.toISOString()}},{due_date:{_lte:s.toISOString()}},{status:{_neq:"deactivated"}}]}})).map((t=>t.id));await t.updateMany(n,{status:"near_expiry"})}catch(t){console.error("Error updating status:",t)}})),t("59 16 * * *",(async()=>{try{const t=new r("clouds",{schema:await a()}),e=new Date,s=new Date(e.getFullYear(),e.getMonth(),e.getDate(),0,0,0).toISOString(),n=new Date(e.getFullYear(),e.getMonth(),e.getDate(),23,59,59).toISOString(),d=(await t.readByQuery({fields:["*"],filter:{_and:[{start_date:{_lte:n}},{start_date:{_gte:s}},{status:{_neq:"deactivated"}}]}})).map((t=>t.id));await t.updateMany(d,{status:"in_use"})}catch(t){console.error("Error updating status:",t)}})),t("59 16 * * *",(async()=>{try{const t=new r("clouds",{schema:await a()}),e=new Date,s=new Date(e.getFullYear(),e.getMonth(),e.getDate(),23,59,59).toISOString(),n=(await t.readByQuery({fields:["*"],filter:{_and:[{due_date:{_lte:s}},{status:{_neq:"deactivated"}}]}})).map((t=>t.id));await t.updateMany(n,{status:"expired"})}catch(t){console.error("Error updating status:",t)}}))}));module.exports=e;
